Why you need improv?
Everyone has a plan, until they get punched in the mouth - Mike Tyson

Simply put, improv is an adjective which means "without a script".  It is creating something moment by moment, building on what has been laid before it.  As one of the originators of modern Improv theater put it:  
"Creativity is not the clever rearranging of the known. 
Creativity is a state that allows us to touch the unknown and to bring it into the phenomenal world: To make the invisible visible.
The unknown is a territory that holds all possibilities, until it is revealed. The act of revealing – that is creativity."
– Viola Spolin


There are a lot or parallels between the Improv world and the Development world.  There are 5 main ones I see that prompted me to create this work. 

1) Both improv and web development use a process comprised of best practices and frameworks. 
For the improvisor these are the central tenants of "Yes! And...", "following the follower", "chasing the fun" moulded onto scaffolding of forms like the Harold, Deconstruction or La Ronde.  For the developer it is "Don't Repeat Yourself" and "Abstraction Principal" and "K.I.S.S." drawn over Ajax, Middleware and CRM frameworks. The jargons differ but they provide a collective vocabulary that can be learned by anyone regardless of any innate talent.  Anyone that wishes to learn them can do so.    


2) Both create an end product which is intended to be enjoyed and perceived on multiple levels.  
On one level sits the uninitiated end user, the mass consumer of the product.  The less they have to think about what is going on the better they will enjoy it.  They just want their basic assumptions met and honored.  Frustrating them gets you a negative review but they honestly don't care how it works, they are content with it being a certain type of magic.  
The other end of the spectrum is inhabited by the fellow craftsperson.  They can see every flaw and are the most judgmental for they too have made similar efforts.  But when you can wow them and really get their applause, you know you are getting somewhere.  No other feeling quite like that.    


3) Every effort is unique.  
No matter how similar, every work is for a slightly different audience.  Even if they came to experience something familiar or expected, an audience craves unique experiences and wants every second to be personalized to their tastes.  The end results, no matter how identical beneath a certain layer, are necessarily different in exact content at least.  


4) Require all sorts of cooperation and teamwork to produce the best results.  
Improv is never done alone.  Even solo performances require an audience to actually exist.  Such is true for the solo developer, working by themselves to deliver some form of a product to some end users somewhere.   Further, both expressions of craft stand on the shoulders of giants who came before and wrote the frameworks and languages we are even describing.  Reading comments in an Open Source bit of code is not really that much different than reading the notes Viola Spolin wrote to accompany her improv exercises. 


5) LOVES TO PARTY!!! 
After 3 drinks can't really tell improvisors or developers apart.  This is rare in most communities I participate and I think it speaks to the underlying similarities in type of person that is drawn to the stage and the people drawn to the command line.   


I want to look at seven elements of improv and apply each to web development.  In each post I will define the idea and how it applies to improv, then explore how each can apply to our work in developmet.  At the end of each section I will share an exercise to help you practice the idea withy our peers.  These will be very simple exercises you can do as an ice breaker or a warm up at the start of a meeting.  

1. Yes, And…  

2. Start with the obvious 

3. Happy Healthy and Well 

4. Active Listening 

5. Serve the piece not the form 

6. Making Other Players Look Good 

7. Accepting Failure As Part Of The Process 
