Start your scenes happy, healthy and well. - John Remak

-> Theater:

One of the best bits of advice I ever got when I was first learning the craft of improv was to 'start positive', which is what John told me in my level 3 class at BATS (http://www.improv.org).  It is very common to rush to conflict as a beginner improvisor.  Without knowing who the characters even are, they are thrust into arguments or crisis. While that might be momentarily interesting, without laying out the groundwork of  the "normalcy" of their relationships, we have no context to understand the stakes or the nature of the situation.  Starting from a place that is happy and healthy lets the audience relax and go on the ride with everyone.  

If we start with an argument, the audience is asked to immediately picking a side, which is what people normally do when we are exposed to conflict.  Since we don't know these people, we can expect apathy at best and contempt for both at worst.  People really do go to theater to see relatable characters go through extraordinary experiences with real emotions, albeit couched in the safety of a stage.  Making sure we define who our characters are clearly will help the audience relax and enjoy whatever happens in the story.   


Stating positive also gives you many more options for what happens in a scene.  For example let's say the audience gives you a suggestion of 'a bomb'. There are many ways to take that suggestion.  If you start a show with a scene about crisis, such as with a bomb about to go off, now you have to deactivate or otherwise deal with the bomb as the focus of the scene, not the relationships between the players which lies at the heart of good theater. One the bomb is deactivated, then what?  Unless someone else edits that scene you are going to have to deal with that reality and hope you have defined your characters meaningfully by then or that your scene gets edited by another player.  The other option here is to start the scene and establish who these characters are and the basis of their relationship.  We could still honor the suggestion by making them co-workers in a bomb factory or protesters getting ready to march or some similar tangent.  Without an immediate problem to conquer, the possibilities of the scene become limitless.



-> Development

Attitude determines a lot about how we perceive the world.  If we are looking for problems we are more likely to find them.  If we approach our work tired and sad, that makes it a grind and a chore.  Starting fro a place of well being might sound a bit simplistic in a demanding world, but approaching anything from a clearer and less stressful mental state will yield better results.  In other words: take care of yourself.  Go for a walk or do yoga or meditate or anything that gets you to a healthy, positive and calm state.  You will most likely find you get better deliverables and enjoy the process a lot more.

This holds true for working with other people even more so than with code.  When collaborating with your peers for instance, reminding yourself and others of what has gone right might seem like a small change but it can make a big difference.  If you get you on the same page faster and remind your team of your history of successes people will look forward to contributing and collaborating.  If we focus solely on what has gone wrong, we begin to dread retrospectives and planning, since it seems we always screw something up.

I can't think of anywhere where this is better illustrated than the world of support.  Customer Success is quite literally on the blunt end of the customer's frustration.  If we start to think of them as 'the enemy' or 'the other', it can heighten all interactions to confrontation.  If we adjust our view to see users as generally smart human beings who are just temporarily confused, which we all have been at some point, and really trying their best, then we are more likely to be compassionate.  Instead of fighting the people who are causing us issues we move to a model of really wanting to see these human beings succeed at using our products.  This actually can lead us to better docs and product improvements (##########Link to Making other players look good#########)  if we start looking at why they are confused rather than just screaming RTFM.  

-> Exercise:

I love

Players stand in a circle and one at a time, in no particular order, say something that they love.  
This can be anything.  From something as mundane as "I love food" or "I love sunsets" to something deeper and personal like "I love getting a card from my favorite aunt" or "I love the feeling I get from giving money to a good cause."  As long as the sentence starts with "I love" and, very importantly, the player is sincere and honest, this game works.  
Other players may not respond to anyone's statements verbally. This is actually important, since it is in our nature to want to 'answer' these comments instead of really just listening.   

Continue this for 2 or more minutes.

This is one of my favorite exercises.

TL:DR


In theater starting from conflict limits you to resolving that conflict. It also doesn't let you have any perspective on the characters.
Take care of yourself as people doing development. Go for a walk. do yoga. meditate anything, just get to a healthy state and you will get better code. Reminding yourself of what you are trying to do, not just what bugs you are trying to squash will help you problem solve.  When supporting, assuming the best of people can help prevent escalating conflicts.  
