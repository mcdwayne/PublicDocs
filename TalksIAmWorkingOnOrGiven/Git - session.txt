Let's learn Git.  No more excuses.

Whether it is for re-using the same code or deploying a bug fix or just for better document management, one of the most important leaps any site builder will ever take in their path towards becoming a developer is learning a version control system, or VCS.  Since Git is the standard VCS over 80% of developers, lets roll up our sleeves and dive in.  The benefits far outweigh the efforts needed to learn this tooling.  Once you start, you will wonder why it took you so long to unleash the power of this awesome tech.  

This talk will briefly explore the need for git, the history and use cases. Then we will jump into how to get started and the basic organizational concepts. We will also examine Github, the web based Git hosting service.  Bring your laptops to play along at home and get started before you leave the room.  


Why git:
done
What is git
done

How to Git
create a .git project
What is in a .git folder?

populate it upon creation
clone

save it using add then commit

modify it

add changes and commit again

Yes you can undo!  This is one of the greatest strengths of Git
https://www.atlassian.com/git/tutorials/undoing-changes

	
	
-1 init - What is in a folder
-2 status - always works, always valuable
-3  add - have git pay attention to temp changes
-4 commit - actually have git remember these changes for real
-5 log - show you the world.  I prefer --online
-6 diff
-7 revert - go back in time and 'undo' the commit SAFE approach as you can revert reverts
-8 reset 
- 9 branch
- 10 checkout
- 11 merge
- 12 remote (GitHub)
- 13 push
14 pull
15 clone

git init
git status
git add
git commit
git log
git diff
git revert
git reset 
git branch
git checkout
git merge
git remote (GitHub)
git push
git pull
git clone