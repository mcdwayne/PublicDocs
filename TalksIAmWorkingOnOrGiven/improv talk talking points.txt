talking points:

Why improv? 
-What do you think?


1. Yes, Andâ€¦   
In theater "Yes! And..." is the basic framework of agreement that lets us build worlds, it is not just not saying no.  It is also contributing your own voice as well.  
Christmas gun - Tina Fey  
In Development we hear "no" far too often and we get defensive of ideas as a result.  When dealing with clients and stakeholders "Yes, And..." allows them to be heard and lowers their defenses.  When dealing with peers not having a knee jerk "no" will help you flesh out ideas and make new connections.
"With an attitude of agreement, we can now add to the conversation in a positive, constructive, and forward thinking manner." 

2. Start with the obvious  
Theater: scene starts as soon as the lights go up.  Agreeing to this reality is important since it fulfills audience expectations.  
Development: Scoping and slowing down to learn what has happened before. with clients  
Measure, then cut.  Know when you are done by defining the 'now' state.


3. Active Listening 
In Theater: All Acting is reacting.  
You have to know what you are reacting to, so listen. 
Listening not just to the words but what is behind them.  
Development:
Listening to stakeholders about what is really at stake.  
the importance of live conversations/loss of meaning in email/slack (even with emojis) 

4. Happy Healthy and Well 
Theater: Starting from conflict limits you to resolving that conflict.
It also doesn't let you have any perspective on the characters themselves before we have to 'pick a side'
Development:   
Take care of yourself.  Go for a walk.  do yoga.  meditate anything, just get to a healthy state and you will get better code.
Reminding yourself of what you are trying to do, not just what bugs you are trying to squash. 
When supporting, assuming the best of people can help prevent escalating conflicts.  

5. Serve the piece not the form 
In theater: When learning you follow a form so to the letter that you no longer have fun
this distresses and audience to see you struggle.  
You have to abandon the form sometimes to serve the needs of the audience.    
Development:
Remembering the goal is happy client/stakeholders.
Example Security.  Best practices around 2factor authentication/dongles, so can make it annoying to use, clients get around it.  
In conversations about there is a bit about Best practices being the right way of doing things, rather than a good idea practice.  Right  means you are likely wrong, we can have similar ideas.    
As Michaell Kreijci says: Strong opinions, held loosely.  

6. Making other players look good 
Theater: Improv is a team sport.  Sometimes you play the straight man or sidekick Spear Holder
No matter what you make moves that support and set people up for success rather than kicking their legs out from under them.  
Development:
Make your end users look like geniuses
Document like it is going into the smithsonian and future civilizations are going to depend on you.  

7. Accepting Failure As Part Of The Process
In improv, fear of failure stops you from adding ideas and participating
safety of the stage makes mistakes gifts.
Development: Git feature branching for the safety to fail and fail big to learn and grow.
Failing in front of your peers sucks, but fear of putting yourself out there can be seen as apathy.  (remember introverts and slack/github comments.)
